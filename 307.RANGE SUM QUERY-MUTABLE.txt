QN - RANGE SUM QUERY- MUTABLE (LEETCODE 307)



class NumArray {
    private int[] segTree;
    private int n;

    public NumArray(int[] nums) {
        n = nums.length;
        segTree = new int[2 * n];
        // Build the segment tree
        for (int i = 0; i < n; i++)
            segTree[n + i] = nums[i];
        for (int i = n - 1; i > 0; i--)
            segTree[i] = segTree[2 * i] + segTree[2 * i + 1];
    }

    public void update(int index, int val) {
        int pos = index + n;
        segTree[pos] = val;
        while (pos > 1) {
            pos /= 2;
            segTree[pos] = segTree[2 * pos] + segTree[2 * pos + 1];
        }
    }

    public int sumRange(int left, int right) {
        int res = 0;
        int l = left + n, r = right + n + 1;
        while (l < r) {
            if ((l & 1) == 1) res += segTree[l++];
            if ((r & 1) == 1) res += segTree[--r];
            l /= 2;
            r /= 2;
        }
        return res;
    }
}


/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * obj.update(index,val);
 * int param_2 = obj.sumRange(left,right);
 */