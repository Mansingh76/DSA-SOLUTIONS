853. Car Fleet

Explanation: Cars closer to target can catch up to slower cars ahead â†’ form fleet.

class Solution {
    public int carFleet(int target, int[] position, int[] speed) {
        int n = position.length;
        int[][] cars = new int[n][2];
        for (int i = 0; i < n; i++) cars[i] = new int[]{position[i], speed[i]};
        Arrays.sort(cars, (a,b) -> b[0] - a[0]); // sort by position descending

        int fleets = 0;
        double time = 0;
        Stack<Double> stack = new Stack<>();
        for (int[] car : cars) {
            double t = (double)(target - car[0]) / car[1];
            if (stack.isEmpty() || t > stack.peek()) stack.push(t);
        }
        return stack.size();
    }
}
