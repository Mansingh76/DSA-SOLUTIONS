846. Hand of Straights (Is N Straight Hand)

Explanation: Always start from the smallest number and form consecutive sequence of size W.




class Solution {
    public boolean isNStraightHand(int[] hand, int groupSize) {
        if (groupSize <= 0) return false;
        if (hand.length % groupSize != 0) return false;

        TreeMap<Integer, Integer> freq = new TreeMap<>();
        for (int x : hand) freq.put(x, freq.getOrDefault(x, 0) + 1);

        while (!freq.isEmpty()) {
            int start = freq.firstKey();            // smallest available
            for (int i = 0; i < groupSize; i++) {
                int card = start + i;
                Integer cnt = freq.get(card);
                if (cnt == null) return false;      // missing card
                if (cnt == 1) freq.remove(card);
                else freq.put(card, cnt - 1);
            }
        }
        return true;
    }
}

